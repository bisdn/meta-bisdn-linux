From 1f556afcefa668821d5174d4efdb610aa65befd5 Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Fri, 24 Jan 2025 16:21:31 +0100
Subject: [PATCH 3/3] network: bridge: add support for IFLA_BRPORT_MAB

Since linux commit a35ec8e38cdd ("bridge: Add MAC Authentication Bypass
(MAB) support") it is possible to MAB for bridge ports. In this mode the
locked port learns again, but the learned fdb entries are locked,
allowing user space to unlock hosts based on their MAC addresses.

This requires learning to be enabled on the port, and link-local
learning disabled for the bridge.

Add support to systemd-network for setting the new attribute for bridge
ports.

Upstream-Status: Backport [https://github.com/systemd/systemd/commit/08a26ecc4733a04fcd763cebd889da1c49672e0e]
Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 src/libsystemd/sd-netlink/netlink-types-rtnl.c | 1 +
 src/network/networkd-network-gperf.gperf       | 1 +
 src/network/networkd-network.c                 | 1 +
 src/network/networkd-network.h                 | 1 +
 src/network/networkd-setlink.c                 | 6 ++++++
 5 files changed, 10 insertions(+)

diff --git a/src/libsystemd/sd-netlink/netlink-types-rtnl.c b/src/libsystemd/sd-netlink/netlink-types-rtnl.c
index fd60760e71da..33cf9e79a781 100644
--- a/src/libsystemd/sd-netlink/netlink-types-rtnl.c
+++ b/src/libsystemd/sd-netlink/netlink-types-rtnl.c
@@ -484,6 +484,7 @@ static const struct NLType rtnl_bridge_port_types[] = {
         [IFLA_BRPORT_MCAST_EHT_HOSTS_LIMIT] = { .type = NETLINK_TYPE_U32 },
         [IFLA_BRPORT_MCAST_EHT_HOSTS_CNT]   = { .type = NETLINK_TYPE_U32 },
         [IFLA_BRPORT_LOCKED]                = { .type = NETLINK_TYPE_U8 },
+        [IFLA_BRPORT_MAB]                   = { .type = NETLINK_TYPE_U8 },
 };
 
 static const NLTypeSystemUnionElement rtnl_link_info_slave_data_type_systems[] = {
diff --git a/src/network/networkd-network-gperf.gperf b/src/network/networkd-network-gperf.gperf
index 3c492e637880..75f2829a5127 100644
--- a/src/network/networkd-network-gperf.gperf
+++ b/src/network/networkd-network-gperf.gperf
@@ -320,6 +320,7 @@ Bridge.ProxyARPWiFi,                         config_parse_tristate,
 Bridge.Priority,                             config_parse_bridge_port_priority,                        0,                             offsetof(Network, priority)
 Bridge.MulticastRouter,                      config_parse_multicast_router,                            0,                             offsetof(Network, multicast_router)
 Bridge.Locked,                               config_parse_tristate,                                    0,                             offsetof(Network, bridge_locked)
+Bridge.MACAuthenticationBypass,              config_parse_tristate,                                    0,                             offsetof(Network, bridge_mac_authentication_bypass)
 BridgeFDB.MACAddress,                        config_parse_fdb_hwaddr,                                  0,                             0
 BridgeFDB.VLANId,                            config_parse_fdb_vlan_id,                                 0,                             0
 BridgeFDB.Destination,                       config_parse_fdb_destination,                             0,                             0
diff --git a/src/network/networkd-network.c b/src/network/networkd-network.c
index a8da727020f0..e1f213b16343 100644
--- a/src/network/networkd-network.c
+++ b/src/network/networkd-network.c
@@ -448,6 +448,7 @@ int network_load_one(Manager *manager, OrderedHashmap **networks, const char *fi
                 .priority = LINK_BRIDGE_PORT_PRIORITY_INVALID,
                 .multicast_router = _MULTICAST_ROUTER_INVALID,
                 .bridge_locked = -1,
+                .bridge_mac_authentication_bypass = -1,
 
                 .lldp_mode = LLDP_MODE_ROUTERS_ONLY,
                 .lldp_multicast_mode = _SD_LLDP_MULTICAST_MODE_INVALID,
diff --git a/src/network/networkd-network.h b/src/network/networkd-network.h
index 9793c6f07dc4..67ae31e379dc 100644
--- a/src/network/networkd-network.h
+++ b/src/network/networkd-network.h
@@ -257,6 +257,7 @@ struct Network {
         uint16_t priority;
         MulticastRouter multicast_router;
         int bridge_locked;
+        int bridge_mac_authentication_bypass;
 
         /* Bridge VLAN */
         bool use_br_vlan;
diff --git a/src/network/networkd-setlink.c b/src/network/networkd-setlink.c
index 36ae86941fd2..b33ec1a3d53b 100644
--- a/src/network/networkd-setlink.c
+++ b/src/network/networkd-setlink.c
@@ -406,6 +406,12 @@ static int link_configure(
                                 return log_link_debug_errno(link, r, "Could not append IFLA_BRPORT_LOCKED attribute: %m");
                 }
 
+                if (link->network->bridge_mac_authentication_bypass >= 0) {
+                        r = sd_netlink_message_append_u8(req, IFLA_BRPORT_MAB, link->network->bridge_mac_authentication_bypass);
+                        if (r < 0)
+                                return log_link_debug_errno(link, r, "Could not append IFLA_BRPORT_MAB attribute: %m");
+                }
+
                 r = sd_netlink_message_close_container(req);
                 if (r < 0)
                         return log_link_debug_errno(link, r, "Could not close IFLA_PROTINFO container: %m");
-- 
2.47.1

