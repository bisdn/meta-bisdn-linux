From d1692fb33ceb8d89688e98f29fcb78010d6b93ec Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Wed, 11 Dec 2024 09:24:54 +0100
Subject: [PATCH 1/3] network: bridge: add support for NO_LL_LEARN

When using locked ports on a bridge link-local learning needs to be
disabled to prevent the kernel from learning and automatically unlocking
hosts based on link-local traffic.

So add support for enabling NO_LL_LEARN for bridges.

Upstream-Status: Backport [https://github.com/systemd/systemd/commit/d7de242ce78ae2782ac483da76204d305ff49ac7]
Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 src/network/netdev/bridge.c           | 13 +++++++++++++
 src/network/netdev/bridge.h           |  1 +
 src/network/netdev/netdev-gperf.gperf |  1 +
 3 files changed, 15 insertions(+)

diff --git a/src/network/netdev/bridge.c b/src/network/netdev/bridge.c
index b974f2ae0a67..3e5e474a5513 100644
--- a/src/network/netdev/bridge.c
+++ b/src/network/netdev/bridge.c
@@ -48,6 +48,7 @@ static int netdev_bridge_set_handler(sd_netlink *rtnl, sd_netlink_message *m, Ne
 static int netdev_bridge_post_create(NetDev *netdev, Link *link, sd_netlink_message *m) {
         _cleanup_(sd_netlink_message_unrefp) sd_netlink_message *req = NULL;
         Bridge *b;
+        struct br_boolopt_multi bm = {};
         int r;
 
         assert(netdev);
@@ -151,6 +152,17 @@ static int netdev_bridge_post_create(NetDev *netdev, Link *link, sd_netlink_mess
                         return log_netdev_error_errno(netdev, r, "Could not append IFLA_BR_MCAST_IGMP_VERSION attribute: %m");
         }
 
+        if (b->linklocal_learn >= 0) {
+                bm.optmask |= 1 << BR_BOOLOPT_NO_LL_LEARN;
+		SET_FLAG(bm.optval, 1 << BR_BOOLOPT_NO_LL_LEARN, !b->linklocal_learn);
+        }
+
+        if (bm.optmask != 0) {
+                r = sd_netlink_message_append_data(req, IFLA_BR_MULTI_BOOLOPT, &bm, sizeof(bm));
+                if (r < 0)
+                        return r;
+        }
+
         r = sd_netlink_message_close_container(req);
         if (r < 0)
                 return log_netdev_error_errno(netdev, r, "Could not append IFLA_LINKINFO attribute: %m");
@@ -269,6 +281,7 @@ static void bridge_init(NetDev *n) {
         b->default_pvid = VLANID_INVALID;
         b->forward_delay = USEC_INFINITY;
         b->ageing_time = USEC_INFINITY;
+        b->linklocal_learn = -1;
 }
 
 const NetDevVTable bridge_vtable = {
diff --git a/src/network/netdev/bridge.h b/src/network/netdev/bridge.h
index a6f322404410..e27178afe9c9 100644
--- a/src/network/netdev/bridge.h
+++ b/src/network/netdev/bridge.h
@@ -19,6 +19,7 @@ typedef struct Bridge {
         uint16_t group_fwd_mask;
         uint16_t default_pvid;
         uint8_t igmp_version;
+        int linklocal_learn;
 
         usec_t forward_delay;
         usec_t hello_time;
diff --git a/src/network/netdev/netdev-gperf.gperf b/src/network/netdev/netdev-gperf.gperf
index a948ec2c8a0e..5627814d0940 100644
--- a/src/network/netdev/netdev-gperf.gperf
+++ b/src/network/netdev/netdev-gperf.gperf
@@ -221,6 +221,7 @@ Bridge.VLANFiltering,                     config_parse_tristate,
 Bridge.VLANProtocol,                      config_parse_vlanprotocol,                 0,                             offsetof(Bridge, vlan_protocol)
 Bridge.STP,                               config_parse_tristate,                     0,                             offsetof(Bridge, stp)
 Bridge.MulticastIGMPVersion,              config_parse_uint8,                        0,                             offsetof(Bridge, igmp_version)
+Bridge.LinkLocalLearning,                 config_parse_tristate,                     0,                             offsetof(Bridge, linklocal_learn)
 VRF.TableId,                              config_parse_uint32,                       0,                             offsetof(Vrf, table) /* deprecated */
 VRF.Table,                                config_parse_uint32,                       0,                             offsetof(Vrf, table)
 BareUDP.DestinationPort,                  config_parse_ip_port,                      0,                             offsetof(BareUDP, dest_port)
-- 
2.47.1

