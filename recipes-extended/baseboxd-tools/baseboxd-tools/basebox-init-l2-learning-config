#!/bin/bash

# Copyright (C) 2024 Rubens Figueiredo of BISDN GmbH
# Bash script to setup a basic learning L2 switch configuration
# Creates systemd files in /etc/systemd/network which sets up the
# switch to provide L2 forwarding.

set -e

# Setup environment variables
CONFIG_DIR=/etc/systemd/network
FILE_SUFFIX="l2-learn"
USAGE="Create autogenerated files to setup L2 switch.
usage: $(basename "$0") [OPTIONS]

[OPTIONS]
-h show this message
-w write the files to the default folder 
-c clean up files
-s show files created but don't write anything
"

cleanup() {
  rm *.$FILE_SUFFIX.netdev
  rm *.$FILE_SUFFIX.network
}

# Generate port.network files
# Call with port_network true/false portname
# The first argument writes (true) or shows the file (false)
# The second argument sets the port name
port_network() {
  port=$2

  FILE="# Autogenerated by /usr/bin/bisdn-init-l2-learning-config
[Match]
Name=$port

[Network]
Bridge=swbridge

[BridgeVLAN]
PVID=1
EgressUntagged=1
VLAN=1"

  if [ $1 == true ]; then
	  echo "$FILE" > $CONFIG_DIR/10-$port.$FILE_SUFFIX.network;
  else
	  echo "Filename:" 20-$port.$FILE_SUFFIX.network;
	  echo "$FILE";

  fi
}

# Generate bridge.network files
# Call with bridge_network true/false
# The first argument writes (true) or shows the file (false)
bridge_network() {
  FILE="# Autogenerated by /usr/bin/bisdn-init-l2-learning-config
[Match]
Bridge=swbridge

[BridgeVLAN]
PVID=1
EgressUntagged=1
VLAN=1"

  if [ $1 == true ]; then
	  echo "$FILE" > $CONFIG_DIR/10-swbridge.$FILE_SUFFIX.network;
  else
	  echo "Filename:" 10-swbridge.$FILE_SUFFIX.network;
	  echo "$FILE";

  fi
}

# Generate bridge.netdev files
# Call with bridge_netdev true/false
# The first argument writes (true) or shows the file (false)
bridge_netdev() {
  FILE="# Autogenerated by /usr/bin/bisdn-init-l2-learning-config
[NetDev]
Name=swbridge
Kind=bridge

[Bridge]
DefaultPVID=1
VLANFiltering=1"

  if [ $1 == true ]; then
	  echo "$FILE" > $CONFIG_DIR/10-swbridge.$FILE_SUFFIX.netdev;
  else
	  echo "Filename:" 10-swbridge.$FILE_SUFFIX.netdev;
	  echo "$FILE";

  fi
}

# Creates all files
# Call with manage_files true/false
# The first argument writes (true) or shows the files (false)
manage_files () {
  bridge_netdev $1
  bridge_network $1
  for port in $(ip link list | grep port | awk '{print $2}' | sed 's/://g'); do
  	port_network $1 $port
  done	
}

pushd $CONFIG_DIR  > /dev/null

while getopts "wcsh" o; do
  case $o in
    w) prepare_files true;;
    s) prepare_files false;;
    c) cleanup;
       exit 1;;	
    h) echo "Printing help";
       echo "$USAGE";
       exit 1;;
    *) echo "Unknown parameter passed, printing help";
       echo "$USAGE";
       exit 1;;
  esac
done

