#!/bin/bash

# Copyright (C) 2024 Rubens Figueiredo of BISDN GmbH
# Bash script to set up a basic learning L2 switch configuration
# Creates systemd files in /etc/systemd/network which sets up the
# switch to provide L2 forwarding.

set -e

# Setup environment variables
CONFIG_DIR=/etc/systemd/network
FILE_INFIX="l2-learn"
USAGE="Create files to set up L2 switch.
usage: $(basename "$0") [OPTIONS]

[OPTIONS]
-h show this message
-w write the files to $CONFIG_DIR
-d clean up auto-generated files
-s show files created but don't write anything
"

cleanup() {
  rm *.$FILE_INFIX.netdev
  rm *.$FILE_INFIX.network
}

# Generate port.network files
# Call with port_network true/false portname
# The first argument writes (true) or shows the file (false)
# The second argument sets the port name
port_network() {
  show=$1

  FILE="# Autogenerated by $(basename "$0")
[Match]
Name=port*

[Network]
Bridge=swbridge

[BridgeVLAN]
PVID=1
EgressUntagged=1
VLAN=1"

  if [ $show == true ]; then
	  echo "$FILE" > $CONFIG_DIR/10-port.$FILE_INFIX.network
  else
	  echo "Filename:" 20-port.$FILE_INFIX.network
	  echo "$FILE"
	  echo ""
  fi
}

# Generate bridge.network files
# Call with bridge_network true/false
# The first argument writes (true) or shows the file (false)
bridge_network() {
  show=$1

  FILE="# Autogenerated by $(basename "$0")
[Match]
Bridge=swbridge

[BridgeVLAN]
PVID=1
EgressUntagged=1
VLAN=1"

  if [ $show == true ]; then
	  echo "$FILE" > $CONFIG_DIR/10-swbridge.$FILE_INFIX.network
  else
	  echo "Filename:" 10-swbridge.$FILE_INFIX.network
	  echo "$FILE"
	  echo ""
  fi
}

# Generate bridge.netdev files
# Call with bridge_netdev true/false
# The first argument writes (true) or shows the file (false)
bridge_netdev() {
  show=$1

  FILE="# Autogenerated by $(basename "$0")
[NetDev]
Name=swbridge
Kind=bridge

[Bridge]
DefaultPVID=1
VLANFiltering=1"

  if [ $show == true ]; then
	  echo "$FILE" > $CONFIG_DIR/10-swbridge.$FILE_INFIX.netdev
  else
	  echo "Filename:" 10-swbridge.$FILE_INFIX.netdev
	  echo "$FILE"
	  echo ""
  fi
}

# Creates all files
# Call with manage_files true/false
# The first argument writes (true) or shows the files (false)
manage_files () {
  bridge_netdev $1
  bridge_network $1
  port_network $1
}

pushd $CONFIG_DIR  > /dev/null

while getopts "wdsh" o; do
  case $o in
    w) manage_files true;
       exit 0;;
    s) manage_files false;
       exit 0;;
    d) cleanup;
       exit 0;;	
    h) echo "Printing help";
       echo "$USAGE";
       exit 0;;
    *) echo "Unknown parameter passed, printing help";
       echo "$USAGE";
       exit 0;;
  esac
done
