From ad066973741ae4ec7075044c84a89472300f1499 Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Tue, 10 Aug 2021 15:54:04 +0200
Subject: [PATCH 7/7] bridge_vlan: flatten data structure and fix various
 issues

* Flatten the entries so that we do not have a bridge_vlan with a linked
  list of vlan_entries, but just a list of vlan_entries. This simplifies
  (de-)allocation and comparison.
* Decompress any vlan ranges to individual entries. This simplifies
  updating entries, as we now won't need to handle splitting existing
  entries if one of range gets modified or deleted.
* Since this is now a simple structure, we can drop the constructor,
  free_data, and clone callbacks.
* Drop the update callback, it is now unneeded.
* Add src/nl-bridge to src/.gitignore.
* Provide oo_id_attrs so lookup of old ojects work

Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 include/netlink-private/types.h     |  15 +--
 include/netlink/route/bridge_vlan.h |  19 +--
 lib/route/bridge_vlan.c             | 199 ++++++++--------------------
 libnl-route-3.sym                   |  10 +-
 src/.gitignore                      |   1 +
 5 files changed, 69 insertions(+), 175 deletions(-)

diff --git a/include/netlink-private/types.h b/include/netlink-private/types.h
index 90e9298..ad50032 100644
--- a/include/netlink-private/types.h
+++ b/include/netlink-private/types.h
@@ -1359,17 +1359,6 @@ struct rtnl_mdb_entry {
 	struct nl_list_head mdb_list;
 };
 
-struct rtnl_bvlan_entry {
-	uint32_t  ce_mask; /* HACK to support attr macros */
-
-	uint16_t vlan_id;
-	uint16_t flags;
-	uint16_t range;
-	uint8_t state;
-
-	struct nl_list_head bridge_vlan_entry_list;
-};
-
 struct rtnl_bridge_vlan {
 	NLHDR_COMMON
 	uint32_t ifindex;
@@ -1377,9 +1366,7 @@ struct rtnl_bridge_vlan {
 
 	uint16_t vlan_id;
 	uint16_t flags;
-	uint16_t range;
 	uint8_t state;
-
-	struct nl_list_head bridge_vlan_list;
 };
+
 #endif
diff --git a/include/netlink/route/bridge_vlan.h b/include/netlink/route/bridge_vlan.h
index 475e053..62f2994 100644
--- a/include/netlink/route/bridge_vlan.h
+++ b/include/netlink/route/bridge_vlan.h
@@ -11,7 +11,7 @@ extern "C" {
 #endif
 	struct rtnl_bridge_vlan *rtnl_bridge_vlan_alloc(void);
 	struct rtnl_bridge_vlan *rtnl_bridge_vlan_get(struct nl_cache *cache,
-						      int ifindex);
+						      int ifindex, int vlan);
 	void rtnl_bridge_vlan_put(struct rtnl_bridge_vlan *bvlan);
 	int rtnl_bridge_vlan_alloc_cache(struct nl_sock *sk,
 					 struct nl_cache **result);
@@ -29,21 +29,12 @@ extern "C" {
 	int rtnl_bridge_vlan_set_ifindex(struct rtnl_bridge_vlan *bvlan,
 					 int ifindex);
 
-	struct rtnl_bvlan_entry *rtnl_bvlan_entry_alloc(void);
-	void rtnl_bridge_vlan_add_entry(struct rtnl_bridge_vlan *bvlan,
-					struct rtnl_bvlan_entry *entry);
-	void rtnl_bridge_vlan_foreach_entry(struct rtnl_bridge_vlan *obj,
-					    void (*cb)(struct rtnl_bvlan_entry
-						       *, void *), void *arg);
-	struct rtnl_bvlan_entry *rtnl_bridge_vlan_get_entry_head(struct
-								 rtnl_bridge_vlan
-								 *obj);
-	int rtnl_bridge_vlan_entry_get_vlan_id(struct rtnl_bvlan_entry *bvlan);
-	int rtnl_bridge_vlan_entry_set_vlan_id(struct rtnl_bvlan_entry *bvlan,
+	int rtnl_bridge_vlan_get_vlan_id(struct rtnl_bridge_vlan *bvlan);
+	int rtnl_bridge_vlan_set_vlan_id(struct rtnl_bridge_vlan *bvlan,
 					       uint16_t vid);
-	uint8_t rtnl_bridge_vlan_entry_get_state(struct rtnl_bvlan_entry
+	uint8_t rtnl_bridge_vlan_get_state(struct rtnl_bridge_vlan
 						 *bvlan);
-	int rtnl_bridge_vlan_entry_set_state(struct rtnl_bvlan_entry *bvlan,
+	int rtnl_bridge_vlan_set_state(struct rtnl_bridge_vlan *bvlan,
 					     uint8_t state);
 #ifdef __cplusplus
 }
diff --git a/lib/route/bridge_vlan.c b/lib/route/bridge_vlan.c
index 1cf844d..99719ab 100644
--- a/lib/route/bridge_vlan.c
+++ b/lib/route/bridge_vlan.c
@@ -11,35 +11,14 @@
 
 /** @cond SKIP */
 #define BRIDGE_VLAN_ATTR_IFINDEX         0x000001
-#define BRIDGE_VLAN_ATTR_RANGE           0x000002
-#define BRIDGE_VLAN_ATTR_FAMILY          0x000004
-#define BRIDGE_VLAN_ATTR_VID             0x000008
+#define BRIDGE_VLAN_ATTR_FAMILY          0x000002
+#define BRIDGE_VLAN_ATTR_VID             0x000004
+#define BRIDGE_VLAN_ATTR_STATE           0x000008
 
 static struct nl_cache_ops rtnl_bridge_vlan_ops;
 static struct nl_object_ops bridge_vlan_obj_ops;
 /** @endcond */
 
-static void bridge_vlan_constructor(struct nl_object *obj)
-{
-	struct rtnl_bridge_vlan *_bridge_vlan = (struct rtnl_bridge_vlan *) obj;
-
-	nl_init_list_head(&_bridge_vlan->bridge_vlan_list);
-}
-
-static void bvlan_entry_free_data(struct rtnl_bvlan_entry *entry)
-{
-	free(entry);
-}
-
-static void bridge_vlan_free_data(struct nl_object *obj)
-{
-	struct rtnl_bridge_vlan *bvlan = (struct rtnl_bridge_vlan *) obj;
-	struct rtnl_bvlan_entry *bvlan_entry;
-
-//      nl_list_for_each_entry(bvlan_entry, &bvlan->bridge_vlan_list, bridge_vlan_entry_list)
-//          bvlan_entry_free_data(bvlan_entry);
-}
-
 static uint64_t bridge_vlan_compare(struct nl_object *_a, struct nl_object *_b,
 				    uint64_t attrs, int flags)
 {
@@ -47,57 +26,25 @@ static uint64_t bridge_vlan_compare(struct nl_object *_a, struct nl_object *_b,
 	struct rtnl_bridge_vlan *b = (struct rtnl_bridge_vlan *) _b;
 	uint64_t diff = 0;
 
-#if 0
 #define BRIDGE_VLAN_DIFF(ATTR, EXPR) ATTR_DIFF(attrs, BRIDGE_VLAN_ATTR_##ATTR, a, b, EXPR)
-	diff |= BRIDGE_VLAN_DIFF(IFINDEX, a->ifindex != b->ifindex);
-#undef BRIDGE_VLAN_DIFF
-#endif
-	return 1;
-}
 
-static int bridge_vlan_clone(struct nl_object *_dst, struct nl_object *_src)
-{
-	struct rtnl_bridge_vlan *dst = nl_object_priv(_dst);
-	struct rtnl_bridge_vlan *src = nl_object_priv(_src);
-
-	dst->ifindex = src->ifindex;
-	dst->family = src->family;
-	dst->state = src->state;
-	dst->vlan_id = src->vlan_id;
-	dst->range = src->range;
-
-	return 0;
-}
-
-static int bridge_vlan_update(struct nl_object *old_obj,
-			      struct nl_object *new_obj)
-{
-	struct rtnl_bridge_vlan *old = (struct rtnl_bridge_vlan *) old_obj;
-	struct rtnl_bridge_vlan *new = (struct rtnl_bridge_vlan *) new_obj;
-
-	return NLE_SUCCESS;
-}
+	diff |= BRIDGE_VLAN_DIFF(IFINDEX, a->ifindex != b->ifindex);
+	diff |= BRIDGE_VLAN_DIFF(FAMILY, a->family != b->family);
+	diff |= BRIDGE_VLAN_DIFF(VID, a->vlan_id != b->vlan_id);
+	diff |= BRIDGE_VLAN_DIFF(STATE, a->state != b->state);
 
-static void brvlan_entry_dump_line(struct rtnl_bvlan_entry *entry,
-				   struct nl_dump_params *p)
-{
-	nl_dump(p, " VLAN=%d", entry->vlan_id);
-	nl_dump(p, " State=%d\n", entry->state);
+#undef BRIDGE_VLAN_DIFF
 
-	if (entry->range)
-		nl_dump(p, "RANGE=%d\n", entry->range);
+	return diff;
 }
 
 static void br_vlan_dump_line(struct nl_object *_obj, struct nl_dump_params *p)
 {
 	struct rtnl_bridge_vlan *obj = (struct rtnl_bridge_vlan *) _obj;
-	struct rtnl_bvlan_entry *entry;
 
 	nl_dump(p, "Ifindex=%d:\n", obj->ifindex);
-	nl_list_for_each_entry(entry, &obj->bridge_vlan_list,
-			       bridge_vlan_entry_list) {
-		brvlan_entry_dump_line(entry, p);
-	}
+	nl_dump(p, " VLAN=%d", obj->vlan_id);
+	nl_dump(p, " State=%d\n", obj->state);
 }
 
 static int bridge_vlan_request_update(struct nl_cache *cache,
@@ -133,31 +80,25 @@ static int bridge_vlan_msg_parser(struct nl_cache_ops *ops,
 	int err = 0;
 	struct nlattr *tb[BRIDGE_VLANDB_MAX + 1],
 	    *ttb[BRIDGE_VLANDB_ENTRY_MAX + 1];
-	uint8_t state = 0;
-	uint16_t range = 0;
-	struct bridge_vlan_info *bvlan_info = NULL;
-	struct rtnl_bridge_vlan *bvlan = rtnl_bridge_vlan_alloc();
 	struct br_vlan_msg *bmsg = nlmsg_data(nlh);
 
-	err =
-	    nlmsg_parse(nlh, sizeof(struct br_vlan_msg), tb, BRIDGE_VLANDB_MAX,
-			br_vlandb_policy);
+	err = nlmsg_parse(nlh, sizeof(struct br_vlan_msg), tb,
+			  BRIDGE_VLANDB_MAX, br_vlandb_policy);
 	if (err < 0)
-		goto errout;
+		return err;
 
 	struct nlattr *pos;
 	int rem = nlh->nlmsg_len;
 
-	bvlan->ce_msgtype = nlh->nlmsg_type;
-
-	bvlan->ifindex = bmsg->ifindex;
-	bvlan->family = bmsg->family;
 	for (pos = nlmsg_data(nlh); nla_ok(pos, rem); pos = nla_next(pos, &rem)) {
+		struct bridge_vlan_info *bvlan_info = NULL;
+		uint16_t range = 0;
+		uint8_t state = 0;
+		int i;
+
 		if (nla_type(pos) != BRIDGE_VLANDB_ENTRY)
 			continue;
 
-		struct rtnl_bvlan_entry *_bvlan = rtnl_bvlan_entry_alloc();
-
 		nla_parse_nested(ttb, BRIDGE_VLANDB_ENTRY_MAX, pos,
 				 br_vlandb_entry_policy);
 
@@ -169,19 +110,32 @@ static int bridge_vlan_msg_parser(struct nl_cache_ops *ops,
 
 		if (ttb[BRIDGE_VLANDB_ENTRY_RANGE])
 			range = nla_get_u16(ttb[BRIDGE_VLANDB_ENTRY_RANGE]);
-
-		_bvlan->state = state;
-		_bvlan->flags = bvlan_info->flags;
-		_bvlan->vlan_id = bvlan_info->vid;
-		_bvlan->range = range;
-
-		rtnl_bridge_vlan_add_entry(bvlan, _bvlan);
+		else
+			range = bvlan_info->vid;
+
+		for (i = bvlan_info->vid; i <= range; i++) {
+			struct rtnl_bridge_vlan *bvlan = rtnl_bridge_vlan_alloc();
+
+			bvlan->ce_msgtype = nlh->nlmsg_type;
+			bvlan->ifindex = bmsg->ifindex;
+			bvlan->ce_mask |= BRIDGE_VLAN_ATTR_IFINDEX;
+			bvlan->family = bmsg->family;
+			bvlan->ce_mask |= BRIDGE_VLAN_ATTR_FAMILY;
+
+			bvlan->state = state;
+			bvlan->ce_mask |= BRIDGE_VLAN_ATTR_STATE;
+			bvlan->vlan_id = i;
+			bvlan->ce_mask |= BRIDGE_VLAN_ATTR_VID;
+
+			err = pp->pp_cb((struct nl_object *) bvlan, pp);
+			if (err) {
+				rtnl_bridge_vlan_put(bvlan);
+				return err;
+			}
+		}
 	}
 
-	err = pp->pp_cb((struct nl_object *) bvlan, pp);
-errout:
-	rtnl_bridge_vlan_put(bvlan);
-	return err;
+	return 0;
 }
 
 static struct nl_af_group br_vlan_groups[] = {
@@ -197,11 +151,8 @@ static struct nl_object_ops bridge_vlan_obj_ops = {
 		    [NL_DUMP_DETAILS] = br_vlan_dump_line,
 		    [NL_DUMP_STATS] = br_vlan_dump_line,
 		    },
-	.oo_constructor = bridge_vlan_constructor,
 	.oo_compare = bridge_vlan_compare,
-	.oo_clone = bridge_vlan_clone,
-	.oo_update = bridge_vlan_update,
-	.oo_free_data = bridge_vlan_free_data,
+	.oo_id_attrs = BRIDGE_VLAN_ATTR_IFINDEX | BRIDGE_VLAN_ATTR_VID,
 };
 
 static struct nl_cache_ops bridge_vlan_ops = {
@@ -287,7 +238,6 @@ int rtnl_bridge_vlan_build_change_request(struct rtnl_bridge_vlan *orig,
 		.family = orig->family,
 		.ifindex = orig->ifindex,
 	};
-	int err, rt;
 
 	build_bridge_vlan_msg(RTM_SETLINK, &bvlan, changes, flags, result);
 
@@ -326,15 +276,9 @@ errout:
  * @name Get/ Set
  * @{
  */
-void rtnl_bridge_vlan_add_entry(struct rtnl_bridge_vlan *bvlan,
-				struct rtnl_bvlan_entry *entry)
-{
-	nl_list_add_tail(&entry->bridge_vlan_entry_list,
-			 &bvlan->bridge_vlan_list);
-}
 
 struct rtnl_bridge_vlan *rtnl_bridge_vlan_get(struct nl_cache *cache,
-					      int ifindex)
+					      int ifindex, int vlan)
 {
 	struct rtnl_bridge_vlan *bvlan_entry;
 
@@ -342,7 +286,8 @@ struct rtnl_bridge_vlan *rtnl_bridge_vlan_get(struct nl_cache *cache,
 		return NULL;
 
 	nl_list_for_each_entry(bvlan_entry, &cache->c_items, ce_list) {
-		if (bvlan_entry->ifindex == ifindex) {
+		if (bvlan_entry->ifindex == ifindex &&
+		    bvlan_entry->vlan_id == vlan) {
 			nl_object_get((struct nl_object *) bvlan_entry);
 			return bvlan_entry;
 		}
@@ -352,26 +297,6 @@ struct rtnl_bridge_vlan *rtnl_bridge_vlan_get(struct nl_cache *cache,
 
 }
 
-struct rtnl_bvlan_entry *rtnl_bridge_vlan_get_entry_head(struct rtnl_bridge_vlan
-							 *obj)
-{
-	return nl_list_first_entry(&obj->bridge_vlan_list,
-				   struct rtnl_bvlan_entry,
-				   bridge_vlan_entry_list);
-
-}
-
-void rtnl_bridge_vlan_foreach_entry(struct rtnl_bridge_vlan *obj,
-				    void (*cb)(struct rtnl_bvlan_entry *,
-					       void *), void *arg)
-{
-	struct rtnl_bvlan_entry *entry;
-	nl_list_for_each_entry(entry, &obj->bridge_vlan_list,
-			       bridge_vlan_entry_list) {
-		cb(entry, arg);
-	}
-}
-
 int rtnl_bridge_vlan_get_ifindex(struct rtnl_bridge_vlan *bvlan)
 {
 	return bvlan->ifindex;
@@ -380,55 +305,47 @@ int rtnl_bridge_vlan_get_ifindex(struct rtnl_bridge_vlan *bvlan)
 int rtnl_bridge_vlan_set_ifindex(struct rtnl_bridge_vlan *bvlan, int ifindex)
 {
 	bvlan->ifindex = ifindex;
+	bvlan->ce_mask |= BRIDGE_VLAN_ATTR_IFINDEX;
+
 	return 0;
 }
 
-int rtnl_bridge_vlan_entry_get_vlan_id(struct rtnl_bvlan_entry *bvlan)
+int rtnl_bridge_vlan_get_vlan_id(struct rtnl_bridge_vlan *bvlan)
 {
 	return bvlan->vlan_id;
 }
 
-int rtnl_bridge_vlan_entry_set_vlan_id(struct rtnl_bvlan_entry *bvlan,
-				       uint16_t vid)
+int rtnl_bridge_vlan_set_vlan_id(struct rtnl_bridge_vlan *bvlan, uint16_t vid)
 {
 	bvlan->vlan_id = vid;
+	bvlan->ce_mask |= BRIDGE_VLAN_ATTR_VID;
+
 	return 0;
 }
 
-uint8_t rtnl_bridge_vlan_entry_get_state(struct rtnl_bvlan_entry *bvlan)
+uint8_t rtnl_bridge_vlan_get_state(struct rtnl_bridge_vlan *bvlan)
 {
 	return bvlan->state;
 }
 
-int rtnl_bridge_vlan_entry_set_state(struct rtnl_bvlan_entry *bvlan,
-				     uint8_t state)
+int rtnl_bridge_vlan_set_state(struct rtnl_bridge_vlan *bvlan, uint8_t state)
 {
 	bvlan->state = state;
+	bvlan->ce_mask |= BRIDGE_VLAN_ATTR_STATE;
+
 	return 0;
 }
 
 /** @} */
 
-struct rtnl_bvlan_entry *rtnl_bvlan_entry_alloc(void)
-{
-	struct rtnl_bvlan_entry *entry;
-
-	entry = calloc(1, sizeof(struct rtnl_bvlan_entry));
-	if (!entry)
-		return NULL;
-	return entry;
-}
-
 struct rtnl_bridge_vlan *rtnl_bridge_vlan_alloc(void)
 {
-	return (struct rtnl_bridge_vlan *)
-	    nl_object_alloc(&bridge_vlan_obj_ops);
+	return (struct rtnl_bridge_vlan *) nl_object_alloc(&bridge_vlan_obj_ops);
 }
 
 void rtnl_bridge_vlan_put(struct rtnl_bridge_vlan *bvlan)
 {
 	nl_object_put((struct nl_object *) bvlan);
-
 }
 
 static void __init bridge_vlan_init(void)
diff --git a/libnl-route-3.sym b/libnl-route-3.sym
index d7bca07..f83f123 100644
--- a/libnl-route-3.sym
+++ b/libnl-route-3.sym
@@ -1177,10 +1177,8 @@ libnl_3_6 {
 	rtnl_bridge_vlan_alloc_cache_flags;
 	rtnl_bridge_vlan_get_ifindex;
 	rtnl_bridge_vlan_set_ifindex;
-	rtnl_bridge_vlan_entry_get_vlan_id;
-	rtnl_bridge_vlan_entry_set_vlan_id;
-	rtnl_bridge_vlan_entry_get_state;
-	rtnl_bridge_vlan_add_entry;
-	rtnl_bridge_vlan_foreach_entry;
-	rtnl_bridge_vlan_get_entry_head;
+	rtnl_bridge_vlan_get_vlan_id;
+	rtnl_bridge_vlan_set_vlan_id;
+	rtnl_bridge_vlan_get_state;
+	rtnl_bridge_vlan_set_state;
 } libnl_3_5;
diff --git a/src/.gitignore b/src/.gitignore
index e53eb3d..31ec86e 100644
--- a/src/.gitignore
+++ b/src/.gitignore
@@ -12,6 +12,7 @@ nf-queue
 nl-addr-add
 nl-addr-delete
 nl-addr-list
+nl-bridge
 nl-class-add
 nl-class-delete
 nl-class-list
-- 
2.32.0

