From 63ea7a2420a31adfcea91a14cbdb86858047c6e1 Mon Sep 17 00:00:00 2001
From: Christoph Paasch <cpaasch@openai.com>
Date: Fri, 1 Aug 2025 14:12:42 -0700
Subject: [PATCH 06/17] [nh] Fix incorrect behavior in rtnl_nh_set_gateway()

If the arg addr is NULL, NH_ATTR_GATEWAY would still be set.
If nl_addr_clone failed, two things would happen:
 - the previous gateway was lost, because nl_addr_put was already called
 - No error-code is returned
 - NH_ATTR_GATEWAY was set nevertheless
nexthop == NULL case is not handled

Fix all of these cases.

Fixes: 780d06ae8bee ("route: add nh type")
Signed-off-by: Christoph Paasch <cpaasch@openai.com>
Upstream-Status: Backport [https://github.com/thom311/libnl/commit/a2db15337b69df30e58d70517112772ce245283f]
Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 lib/route/nh.c | 24 ++++++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

diff --git a/lib/route/nh.c b/lib/route/nh.c
index b2fb9db52f15..dbfe7b2e8b76 100644
--- a/lib/route/nh.c
+++ b/lib/route/nh.c
@@ -189,12 +189,28 @@ static void nexthop_keygen(struct nl_object *obj, uint32_t *hashkey,
 
 int rtnl_nh_set_gateway(struct rtnl_nh *nexthop, struct nl_addr *addr)
 {
-	if (nexthop->ce_mask & NH_ATTR_GATEWAY) {
-		nl_addr_put(nexthop->nh_gateway);
+	struct nl_addr *old = NULL;
+
+	if (!nexthop)
+		return -NLE_INVAL;
+
+	/* preserve old pointer to release after successful update */
+	old = nexthop->nh_gateway;
+
+	if (addr) {
+		struct nl_addr *cloned = nl_addr_clone(addr);
+		if (!cloned)
+			return -NLE_NOMEM;
+
+		nexthop->nh_gateway = cloned;
+		nexthop->ce_mask |= NH_ATTR_GATEWAY;
+	} else {
+		nexthop->nh_gateway = NULL;
+		nexthop->ce_mask &= ~NH_ATTR_GATEWAY;
 	}
 
-	nexthop->nh_gateway = nl_addr_clone(addr);
-	nexthop->ce_mask |= NH_ATTR_GATEWAY;
+	if (old)
+		nl_addr_put(old);
 
 	return 0;
 }
-- 
2.51.0

